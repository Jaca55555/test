
package uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CryptoAuth", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CryptoAuth {


    /**
     * 
     * @param dataB64
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDigest", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.GetDigest")
    @ResponseWrapper(localName = "getDigestResponse", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.GetDigestResponse")
    @Action(input = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/getDigestRequest", output = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/getDigestResponse")
    String getDigest(
            @WebParam(name = "dataB64", targetNamespace = "")
                    String dataB64);

    /**
     *
     * @param digestHex
     * @param signatureHex
     * @param signerCertB64
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifyDigest", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.VerifyDigest")
    @ResponseWrapper(localName = "verifyDigestResponse", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.VerifyDigestResponse")
    @Action(input = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/verifyDigestRequest", output = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/verifyDigestResponse")
    String verifyDigest(
            @WebParam(name = "digestHex", targetNamespace = "")
                    String digestHex,
            @WebParam(name = "signatureHex", targetNamespace = "")
                    String signatureHex,
            @WebParam(name = "signerCertB64", targetNamespace = "")
                    String signerCertB64);

    /**
     *
     * @param textB64
     * @param signatureHex
     * @param signerCertB64
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifySignature", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.VerifySignature")
    @ResponseWrapper(localName = "verifySignatureResponse", targetNamespace = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/", className = "uz.maroqand.ecology.core.service.integration.eimzo.yt_cryptoauth.VerifySignatureResponse")
    @Action(input = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/verifySignatureRequest", output = "http://v1.cryptoauth.plugin.ss.capi.yt.uz/CryptoAuth/verifySignatureResponse")
    String verifySignature(
            @WebParam(name = "textB64", targetNamespace = "")
                    String textB64,
            @WebParam(name = "signatureHex", targetNamespace = "")
                    String signatureHex,
            @WebParam(name = "signerCertB64", targetNamespace = "")
                    String signerCertB64);

}
